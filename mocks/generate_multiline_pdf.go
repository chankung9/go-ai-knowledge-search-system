package main

import (
	"log"

	"github.com/jung-kurt/gofpdf"
)

func main() {
	pdf := gofpdf.New("P", "mm", "A4", "")
	pdf.SetTitle("Sample Report - PDF Generation", false)
	pdf.SetAuthor("Go AI Knowledge Search System", false)

	// Section 1
	pdf.AddPage()
	pdf.SetFont("Arial", "B", 16)
	pdf.Cell(0, 12, "Section 1: Executive Summary")
	pdf.Ln(14)

	pdf.SetFont("Arial", "", 12)
	pdf.MultiCell(0, 8, "This report provides an overview of PDF generation and chunk extraction for AI knowledge search systems. The document is structured into several sections to simulate a real-world report.", "", "", false)
	pdf.Ln(6)

	// Subsection
	pdf.SetFont("Arial", "B", 14)
	pdf.Cell(0, 10, "1.1 Background")
	pdf.Ln(10)

	pdf.SetFont("Arial", "", 12)
	pdf.MultiCell(0, 8, "PDFs are widely used for document exchange. Accurate extraction of structured information, such as headers and sections, is crucial for downstream AI models.", "", "", false)
	pdf.Ln(6)

	// Section 2
	pdf.SetFont("Arial", "B", 16)
	pdf.Cell(0, 12, "Section 2: Data Extraction Results")
	pdf.Ln(14)

	pdf.SetFont("Arial", "", 12)
	pdf.MultiCell(0, 8, "The following table summarizes extraction statistics from several sample documents.", "", "", false)
	pdf.Ln(6)

	pdf.SetFont("Arial", "B", 12)
	pdf.Cell(60, 8, "Document")
	pdf.Cell(40, 8, "Pages")
	pdf.Cell(40, 8, "Chunks")
	pdf.Cell(40, 8, "Sections")
	pdf.Ln(8)

	pdf.SetFont("Arial", "", 12)
	pdf.Cell(60, 8, "report1.pdf")
	pdf.Cell(40, 8, "5")
	pdf.Cell(40, 8, "24")
	pdf.Cell(40, 8, "3")
	pdf.Ln(8)
	pdf.Cell(60, 8, "whitepaper.pdf")
	pdf.Cell(40, 8, "12")
	pdf.Cell(40, 8, "67")
	pdf.Cell(40, 8, "8")
	pdf.Ln(8)
	pdf.Cell(60, 8, "manual.pdf")
	pdf.Cell(40, 8, "20")
	pdf.Cell(40, 8, "182")
	pdf.Cell(40, 8, "10")
	pdf.Ln(14)

	// Add a page break and a new section
	pdf.AddPage()
	pdf.SetFont("Arial", "B", 16)
	pdf.Cell(0, 12, "Section 3: Conclusions & Future Work")
	pdf.Ln(14)

	pdf.SetFont("Arial", "", 12)
	pdf.MultiCell(0, 8, "Improving the realism of test PDFs, with headers, sections and multi-page layouts, enhances the evaluation of extraction and search capabilities.", "", "", false)
	pdf.Ln(8)
	pdf.MultiCell(0, 8, "Future improvements include:\n- Adding figures and tables\n- Simulating footnotes and references\n- Including section numbering and TOC", "", "", false)
	pdf.Ln(10)

	// Footer
	pdf.SetY(-20)
	pdf.SetFont("Arial", "I", 10)
	pdf.Cell(0, 10, "Sample PDF generated by generate_multiline_pdf.go for development and testing purposes.")

	if err := pdf.OutputFileAndClose("multiline.pdf"); err != nil {
		log.Fatalf("Could not create PDF: %v", err)
	}
}
