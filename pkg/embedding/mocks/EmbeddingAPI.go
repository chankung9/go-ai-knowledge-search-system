// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EmbeddingAPI is an autogenerated mock type for the EmbeddingAPI type
type EmbeddingAPI struct {
	mock.Mock
}

// Embed provides a mock function with given fields: texts
func (_m *EmbeddingAPI) Embed(texts []string) ([][]float32, error) {
	ret := _m.Called(texts)

	if len(ret) == 0 {
		panic("no return value specified for Embed")
	}

	var r0 [][]float32
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) ([][]float32, error)); ok {
		return rf(texts)
	}
	if rf, ok := ret.Get(0).(func([]string) [][]float32); ok {
		r0 = rf(texts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]float32)
		}
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(texts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEmbeddingAPI creates a new instance of EmbeddingAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmbeddingAPI(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmbeddingAPI {
	mock := &EmbeddingAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
